/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
 /* tslint:disable */

import * as import0 from './toast-container.component';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/render/api';
import * as import3 from '@angular/core/src/linker/view_utils';
import * as import4 from '@angular/core/src/metadata/view';
import * as import5 from '@angular/core/src/linker/view_type';
import * as import6 from '@angular/core/src/change_detection/change_detection';
import * as import7 from '@angular/core/src/linker/component_factory';
import * as import8 from '@angular/platform-browser/src/security/dom_sanitization_service';
import * as import9 from './toast-options';
import * as import10 from '@angular/core/src/animation/animation_transition';
import * as import11 from '@angular/core/src/animation/animation_style_util';
import * as import12 from '@angular/core/src/animation/animation_sequence_player';
import * as import13 from '@angular/core/src/animation/animation_styles';
import * as import14 from '@angular/core/src/animation/animation_keyframe';
import * as import15 from '@angular/core/src/animation/animation_player';
import * as import16 from '@angular/core/src/linker/view_container';
import * as import17 from '../node_modules/@angular/common/src/directives/ng_for.ngfactory';
import * as import18 from '@angular/core/src/linker/template_ref';
import * as import19 from '@angular/core/src/change_detection/differs/iterable_differs';
import * as import20 from '@angular/common/src/directives/ng_for';
import * as import21 from '@angular/core/src/security';
import * as import22 from '../node_modules/@angular/common/src/directives/ng_if.ngfactory';
import * as import23 from '../node_modules/@angular/common/src/directives/ng_switch.ngfactory';
import * as import24 from '@angular/common/src/directives/ng_if';
import * as import25 from '@angular/common/src/directives/ng_switch';
export class Wrapper_ToastContainer {
  /*private*/ _eventHandler:Function;
  context:import0.ToastContainer;
  /*private*/ _changed:boolean;
  constructor(p0:any,p1:any,p2:any) {
    this._changed = false;
    this.context = new import0.ToastContainer(p0,p1,p2);
  }
  ngOnDetach(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any):void {
  }
  ngOnDestroy():void {
  }
  ngDoCheck(view:import1.AppView<any>,el:any,throwOnChange:boolean):boolean {
    var changed:any = this._changed;
    this._changed = false;
    return changed;
  }
  checkHost(view:import1.AppView<any>,componentView:import1.AppView<any>,el:any,throwOnChange:boolean):void {
  }
  handleEvent(eventName:string,$event:any):boolean {
    var result:boolean = true;
    return result;
  }
  subscribe(view:import1.AppView<any>,_eventHandler:any):void {
    this._eventHandler = _eventHandler;
  }
}
var renderType_ToastContainer_Host:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,([] as any[]),{});
class View_ToastContainer_Host0 extends import1.AppView<any> {
  _el_0:any;
  compView_0:import1.AppView<import0.ToastContainer>;
  _ToastContainer_0_3:Wrapper_ToastContainer;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ToastContainer_Host0,renderType_ToastContainer_Host,import5.ViewType.HOST,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer,'toast-container',import3.EMPTY_INLINE_ARRAY,rootSelector,(null as any));
    this.compView_0 = new View_ToastContainer0(this.viewUtils,this,0,this._el_0);
    this._ToastContainer_0_3 = new Wrapper_ToastContainer(this.injectorGet(import8.DomSanitizer,this.parentIndex),this.compView_0.ref,this.injectorGet(import9.ToastOptions,this.parentIndex,(null as any)));
    this.compView_0.create(this._ToastContainer_0_3.context);
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return new import7.ComponentRef_<any>(0,this,this._el_0,this._ToastContainer_0_3.context);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import0.ToastContainer) && (0 === requestNodeIndex))) { return this._ToastContainer_0_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    this._ToastContainer_0_3.ngDoCheck(this,this._el_0,throwOnChange);
    this.compView_0.detectChanges(throwOnChange);
  }
  destroyInternal():void {
    this.compView_0.destroy();
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
export const ToastContainerNgFactory:import7.ComponentFactory<import0.ToastContainer> = new import7.ComponentFactory<import0.ToastContainer>('toast-container',View_ToastContainer_Host0,import0.ToastContainer);
const styles_ToastContainer:any[] = ([] as any[]);
var ToastContainer_inOut_states:any = {
  flyRight: {
    opacity: '1',
    transform: 'translateX(0)'
  }
  ,
  flyLeft: {
    opacity: '1',
    transform: 'translateX(0)'
  }
  ,
  fade: {opacity: '1'},
  slideDown: {
    opacity: '1',
    transform: 'translateY(0)'
  }
  ,
  slideUp: {
    opacity: '1',
    transform: 'translateY(0)'
  }
  ,
  '*': {},
  void: {}
}
;
function ToastContainer_inOut_factory(view:import1.AppView<any>,element:any,currentState:any,nextState:any):import10.AnimationTransition {
  view.animationContext.cancelActiveAnimation(element,'inOut',(nextState == 'void'));
  var collectedStyles:any = {};
  var player:any = (null as any);
  var totalTime:any = 0;
  var defaultStateStyles:any = ToastContainer_inOut_states['*'];
  var startStateStyles:any = ToastContainer_inOut_states[currentState];
  if ((startStateStyles == (null as any))) { (startStateStyles = defaultStateStyles); }
  var endStateStyles:any = ToastContainer_inOut_states[nextState];
  if ((endStateStyles == (null as any))) { (endStateStyles = defaultStateStyles); }
  import11.renderStyles(element,view.renderer,import11.clearStyles(startStateStyles));
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'flyRight')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          opacity: '0',
          transform: 'translateX(100%)'
        }

      ]
      )),import11.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),200,0,'ease-in')]);
    totalTime = 200;
  }
  if (((player == (null as any)) && ((currentState == 'flyRight') && (nextState == 'void')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
          new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: 'true',
            transform: 'true'
          }
        ]))),
          new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: '0',
            transform: 'translateX(100%)'
          }
        ])))
      ]
    ,200,0,(null as any))]);
    totalTime = 200;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'flyLeft')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          opacity: '0',
          transform: 'translateX(-100%)'
        }

      ]
      )),import11.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),200,0,'ease-in')]);
    totalTime = 200;
  }
  if (((player == (null as any)) && ((currentState == 'flyLeft') && (nextState == 'void')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
          new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: 'true',
            transform: 'true'
          }
        ]))),
          new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: '0',
            transform: 'translateX(-100%)'
          }
        ])))
      ]
    ,200,0,(null as any))]);
    totalTime = 200;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'fade')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {opacity: '0'}
      ]
      )),import11.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),300,0,'ease-in')]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == 'fade') && (nextState == 'void')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
        new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{opacity: 'true'}]))),
        new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{opacity: '0'}])))
      ]
    ,300,0,(null as any))]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'slideDown')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          opacity: '0',
          transform: 'translateY(-200%)'
        }

      ]
      )),import11.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),300,0,'ease-in')]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == 'slideDown') && (nextState == 'void')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
          new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: 'true',
            transform: 'true'
          }
        ]))),
          new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: '0',
            transform: 'translateY(-200%)'
          }
        ])))
      ]
    ,300,0,(null as any))]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == 'void') && (nextState == 'slideUp')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[
        startStateStyles,
        {
          opacity: '0',
          transform: 'translateY(200%)'
        }

      ]
      )),import11.balanceAnimationKeyframes(collectedStyles,endStateStyles,[
        new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}]))),
        new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{}])))
      ]
    ),300,0,'ease-in')]);
    totalTime = 300;
  }
  if (((player == (null as any)) && ((currentState == 'slideUp') && (nextState == 'void')))) {
      player = new import12.AnimationSequencePlayer([view.renderer.animate(element,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[startStateStyles])),[
          new import14.AnimationKeyframe(0,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: 'true',
            transform: 'true'
          }
        ]))),
          new import14.AnimationKeyframe(1,new import13.AnimationStyles(import11.collectAndResolveStyles(collectedStyles,[{
            opacity: '0',
            transform: 'translateY(200%)'
          }
        ])))
      ]
    ,300,0,(null as any))]);
    totalTime = 300;
  }
  if ((player == (null as any))) { (player = new import15.NoOpAnimationPlayer()); }
  player.onDone(():void => {
    player.destroy();
    import11.renderStyles(element,view.renderer,import11.prepareFinalAnimationStyles(startStateStyles,endStateStyles));
  });
  view.animationContext.queueAnimation(element,'inOut',player);
  return new import10.AnimationTransition(player,currentState,nextState,totalTime);
}
var renderType_ToastContainer:import2.RenderComponentType = import3.createRenderComponentType('',0,import4.ViewEncapsulation.None,styles_ToastContainer,{inOut: ToastContainer_inOut_factory});
export class View_ToastContainer0 extends import1.AppView<import0.ToastContainer> {
  _text_0:any;
  _el_1:any;
  _text_2:any;
  _anchor_3:any;
  /*private*/ _vc_3:import16.ViewContainer;
  _TemplateRef_3_5:any;
  _NgFor_3_6:import17.Wrapper_NgFor;
  _text_4:any;
  _text_5:any;
  /*private*/ _expr_9:any;
  /*private*/ _expr_10:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any) {
    super(View_ToastContainer0,renderType_ToastContainer,import5.ViewType.COMPONENT,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways);
    this._expr_9 = import6.UNINITIALIZED;
    this._expr_10 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    const parentRenderNode:any = this.renderer.createViewRoot(this.parentElement);
    this._text_0 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this._el_1 = import3.createRenderElement(this.renderer,parentRenderNode,'div',new import3.InlineArray2(2,'id','toast-container'),(null as any));
    this._text_2 = this.renderer.createText(this._el_1,'\n      ',(null as any));
    this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1,(null as any));
    this._vc_3 = new import16.ViewContainer(3,1,this,this._anchor_3);
    this._TemplateRef_3_5 = new import18.TemplateRef_(this,3,this._anchor_3);
    this._NgFor_3_6 = new import17.Wrapper_NgFor(this._vc_3.vcRef,this._TemplateRef_3_5,this.parentView.injectorGet(import19.IterableDiffers,this.parentIndex),this.ref);
    this._text_4 = this.renderer.createText(this._el_1,'\n    ',(null as any));
    this._text_5 = this.renderer.createText(parentRenderNode,'\n    ',(null as any));
    this.init((null as any),((<any>this.renderer).directRenderer? (null as any): [
      this._text_0,
      this._el_1,
      this._text_2,
      this._anchor_3,
      this._text_4,
      this._text_5
    ]
    ),(null as any));
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (3 === requestNodeIndex))) { return this._TemplateRef_3_5; }
    if (((token === import20.NgFor) && (3 === requestNodeIndex))) { return this._NgFor_3_6.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_3_0_0:any = this.context.toasts;
    this._NgFor_3_6.check_ngForOf(currVal_3_0_0,throwOnChange,false);
    this._NgFor_3_6.ngDoCheck(this,this._anchor_3,throwOnChange);
    this._vc_3.detectChangesInNestedViews(throwOnChange);
    const currVal_9:any = this.context.position;
    if (import3.checkBinding(throwOnChange,this._expr_9,currVal_9)) {
      this.renderer.setElementStyle(this._el_1,'position',((this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE,currVal_9) == null)? (null as any): this.viewUtils.sanitizer.sanitize(import21.SecurityContext.STYLE,currVal_9).toString()));
      this._expr_9 = currVal_9;
    }
    const currVal_10:any = import3.inlineInterpolate(1,'',this.context.positionClass,'');
    if (import3.checkBinding(throwOnChange,this._expr_10,currVal_10)) {
      this.renderer.setElementProperty(this._el_1,'className',currVal_10);
      this._expr_10 = currVal_10;
    }
  }
  destroyInternal():void {
    this._vc_3.destroyNestedViews();
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 3)) { return new View_ToastContainer1(this.viewUtils,this,3,this._anchor_3,this._vc_3); }
    return (null as any);
  }
}
class View_ToastContainer1 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  _anchor_2:any;
  /*private*/ _vc_2:import16.ViewContainer;
  _TemplateRef_2_5:any;
  _NgIf_2_6:import22.Wrapper_NgIf;
  _text_3:any;
  _anchor_4:any;
  /*private*/ _vc_4:import16.ViewContainer;
  _TemplateRef_4_5:any;
  _NgIf_4_6:import22.Wrapper_NgIf;
  _text_5:any;
  _el_6:any;
  _NgSwitch_6_3:import23.Wrapper_NgSwitch;
  _text_7:any;
  _anchor_8:any;
  /*private*/ _vc_8:import16.ViewContainer;
  _TemplateRef_8_5:any;
  _NgSwitchCase_8_6:import23.Wrapper_NgSwitchCase;
  _text_9:any;
  _anchor_10:any;
  /*private*/ _vc_10:import16.ViewContainer;
  _TemplateRef_10_5:any;
  _NgSwitchDefault_10_6:import23.Wrapper_NgSwitchDefault;
  _text_11:any;
  _text_12:any;
  /*private*/ _expr_26:any;
  /*private*/ _expr_27:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_ToastContainer1,renderType_ToastContainer,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_26 = import6.UNINITIALIZED;
    this._expr_27 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._anchor_2 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_2 = new import16.ViewContainer(2,0,this,this._anchor_2);
    this._TemplateRef_2_5 = new import18.TemplateRef_(this,2,this._anchor_2);
    this._NgIf_2_6 = new import22.Wrapper_NgIf(this._vc_2.vcRef,this._TemplateRef_2_5);
    this._text_3 = this.renderer.createText(this._el_0,' \n        ',(null as any));
    this._anchor_4 = this.renderer.createTemplateAnchor(this._el_0,(null as any));
    this._vc_4 = new import16.ViewContainer(4,0,this,this._anchor_4);
    this._TemplateRef_4_5 = new import18.TemplateRef_(this,4,this._anchor_4);
    this._NgIf_4_6 = new import22.Wrapper_NgIf(this._vc_4.vcRef,this._TemplateRef_4_5);
    this._text_5 = this.renderer.createText(this._el_0,'\n        ',(null as any));
    this._el_6 = import3.createRenderElement(this.renderer,this._el_0,'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._NgSwitch_6_3 = new import23.Wrapper_NgSwitch();
    this._text_7 = this.renderer.createText(this._el_6,'\n          ',(null as any));
    this._anchor_8 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_8 = new import16.ViewContainer(8,6,this,this._anchor_8);
    this._TemplateRef_8_5 = new import18.TemplateRef_(this,8,this._anchor_8);
    this._NgSwitchCase_8_6 = new import23.Wrapper_NgSwitchCase(this._vc_8.vcRef,this._TemplateRef_8_5,this._NgSwitch_6_3.context);
    this._text_9 = this.renderer.createText(this._el_6,'\n          ',(null as any));
    this._anchor_10 = this.renderer.createTemplateAnchor(this._el_6,(null as any));
    this._vc_10 = new import16.ViewContainer(10,6,this,this._anchor_10);
    this._TemplateRef_10_5 = new import18.TemplateRef_(this,10,this._anchor_10);
    this._NgSwitchDefault_10_6 = new import23.Wrapper_NgSwitchDefault(this._vc_10.vcRef,this._TemplateRef_10_5,this._NgSwitch_6_3.context);
    this._text_11 = this.renderer.createText(this._el_6,'\n        ',(null as any));
    this._text_12 = this.renderer.createText(this._el_0,'             \n      ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1,
      this._anchor_2,
      this._text_3,
      this._anchor_4,
      this._text_5,
      this._el_6,
      this._text_7,
      this._anchor_8,
      this._text_9,
      this._anchor_10,
      this._text_11,
      this._text_12
    ]
    ),[disposable_0]);
    return (null as any);
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import18.TemplateRef) && (2 === requestNodeIndex))) { return this._TemplateRef_2_5; }
    if (((token === import24.NgIf) && (2 === requestNodeIndex))) { return this._NgIf_2_6.context; }
    if (((token === import18.TemplateRef) && (4 === requestNodeIndex))) { return this._TemplateRef_4_5; }
    if (((token === import24.NgIf) && (4 === requestNodeIndex))) { return this._NgIf_4_6.context; }
    if (((token === import18.TemplateRef) && (8 === requestNodeIndex))) { return this._TemplateRef_8_5; }
    if (((token === import25.NgSwitchCase) && (8 === requestNodeIndex))) { return this._NgSwitchCase_8_6.context; }
    if (((token === import18.TemplateRef) && (10 === requestNodeIndex))) { return this._TemplateRef_10_5; }
    if (((token === import25.NgSwitchDefault) && (10 === requestNodeIndex))) { return this._NgSwitchDefault_10_6.context; }
    if (((token === import25.NgSwitch) && ((6 <= requestNodeIndex) && (requestNodeIndex <= 11)))) { return this._NgSwitch_6_3.context; }
    return notFoundResult;
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_26:any = this.parentView.context.animate;
    if (import3.checkBinding(throwOnChange,this._expr_26,currVal_26)) {
      var animationTransition_inOut:any = this.componentType.animations['inOut'](this,this._el_0,((this._expr_26 == import6.UNINITIALIZED)? 'void': this._expr_26),((currVal_26 == import6.UNINITIALIZED)? 'void': currVal_26));
      animationTransition_inOut.onStart(this.handleEvent_0.bind(this).bind(this,'@inOut.start'));
      animationTransition_inOut.onDone(this.handleEvent_0.bind(this).bind(this,'@inOut.done'));
      this._expr_26 = currVal_26;
    }
    const currVal_2_0_0:any = this.context.$implicit.config.showCloseButton;
    this._NgIf_2_6.check_ngIf(currVal_2_0_0,throwOnChange,false);
    this._NgIf_2_6.ngDoCheck(this,this._anchor_2,throwOnChange);
    const currVal_4_0_0:any = this.context.$implicit.title;
    this._NgIf_4_6.check_ngIf(currVal_4_0_0,throwOnChange,false);
    this._NgIf_4_6.ngDoCheck(this,this._anchor_4,throwOnChange);
    const currVal_6_0_0:any = this.context.$implicit.config.enableHTML;
    this._NgSwitch_6_3.check_ngSwitch(currVal_6_0_0,throwOnChange,false);
    this._NgSwitch_6_3.ngDoCheck(this,this._el_6,throwOnChange);
    const currVal_8_0_0:any = true;
    this._NgSwitchCase_8_6.check_ngSwitchCase(currVal_8_0_0,throwOnChange,false);
    this._NgSwitchCase_8_6.ngDoCheck(this,this._anchor_8,throwOnChange);
    this._NgSwitchDefault_10_6.ngDoCheck(this,this._anchor_10,throwOnChange);
    this._vc_2.detectChangesInNestedViews(throwOnChange);
    this._vc_4.detectChangesInNestedViews(throwOnChange);
    this._vc_8.detectChangesInNestedViews(throwOnChange);
    this._vc_10.detectChangesInNestedViews(throwOnChange);
    const currVal_27:any = import3.inlineInterpolate(1,'toast toast-',this.context.$implicit.type,'');
    if (import3.checkBinding(throwOnChange,this._expr_27,currVal_27)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_27);
      this._expr_27 = currVal_27;
    }
  }
  destroyInternal():void {
    this._vc_2.destroyNestedViews();
    this._vc_4.destroyNestedViews();
    this._vc_8.destroyNestedViews();
    this._vc_10.destroyNestedViews();
  }
  detachInternal():void {
    var animationTransition_inOut:any = this.componentType.animations['inOut'](this,this._el_0,this._expr_26,'void');
    animationTransition_inOut.onStart(this.handleEvent_0.bind(this).bind(this,'@inOut.start'));
    animationTransition_inOut.onDone(this.handleEvent_0.bind(this).bind(this,'@inOut.done'));
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  createEmbeddedViewInternal(nodeIndex:number):import1.AppView<any> {
    if ((nodeIndex == 2)) { return new View_ToastContainer2(this.viewUtils,this,2,this._anchor_2,this._vc_2); }
    if ((nodeIndex == 4)) { return new View_ToastContainer3(this.viewUtils,this,4,this._anchor_4,this._vc_4); }
    if ((nodeIndex == 8)) { return new View_ToastContainer4(this.viewUtils,this,8,this._anchor_8,this._vc_8); }
    if ((nodeIndex == 10)) { return new View_ToastContainer5(this.viewUtils,this,10,this._anchor_10,this._vc_10); }
    return (null as any);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.context.clicked(this.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ToastContainer2 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_ToastContainer2,renderType_ToastContainer,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',new import3.InlineArray2(2,'class','toast-close-button'),(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'×\n        ',(null as any));
    var disposable_0:Function = import3.subscribeToRenderElement(this,this._el_0,new import3.InlineArray2(2,'click',(null as any)),this.eventHandler(this.handleEvent_0));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),[disposable_0]);
    return (null as any);
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
  handleEvent_0(eventName:string,$event:any):boolean {
    this.markPathToRootAsCheckOnce();
    var result:boolean = true;
    if ((eventName == 'click')) {
      const pd_sub_0:any = ((<any>this.parentView.parentView.context.removeToast(this.parentView.context.$implicit)) !== false);
      result = (pd_sub_0 && result);
    }
    return result;
  }
}
class View_ToastContainer3 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_ToastContainer3,renderType_ToastContainer,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import6.UNINITIALIZED;
    this._expr_3 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'div',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',(this.parentView.context.$implicit.config.titleClass || this.parentView.parentView.context.titleClass),'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.title,'');
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setText(this._text_1,currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ToastContainer4 extends import1.AppView<any> {
  _el_0:any;
  /*private*/ _expr_1:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_ToastContainer4,renderType_ToastContainer,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_1 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [this._el_0]),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_1:any = this.parentView.parentView.context.sanitizer.bypassSecurityTrustHtml(this.parentView.context.$implicit.message);
    if (import3.checkBinding(throwOnChange,this._expr_1,currVal_1)) {
      this.renderer.setElementProperty(this._el_0,'innerHTML',this.viewUtils.sanitizer.sanitize(import21.SecurityContext.HTML,currVal_1));
      this._expr_1 = currVal_1;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}
class View_ToastContainer5 extends import1.AppView<any> {
  _el_0:any;
  _text_1:any;
  /*private*/ _expr_2:any;
  /*private*/ _expr_3:any;
  constructor(viewUtils:import3.ViewUtils,parentView:import1.AppView<any>,parentIndex:number,parentElement:any,declaredViewContainer:import16.ViewContainer) {
    super(View_ToastContainer5,renderType_ToastContainer,import5.ViewType.EMBEDDED,viewUtils,parentView,parentIndex,parentElement,import6.ChangeDetectorStatus.CheckAlways,declaredViewContainer);
    this._expr_2 = import6.UNINITIALIZED;
    this._expr_3 = import6.UNINITIALIZED;
  }
  createInternal(rootSelector:string):import7.ComponentRef<any> {
    this._el_0 = import3.createRenderElement(this.renderer,(null as any),'span',import3.EMPTY_INLINE_ARRAY,(null as any));
    this._text_1 = this.renderer.createText(this._el_0,'',(null as any));
    this.init(this._el_0,((<any>this.renderer).directRenderer? (null as any): [
      this._el_0,
      this._text_1
    ]
    ),(null as any));
    return (null as any);
  }
  detectChangesInternal(throwOnChange:boolean):void {
    const currVal_2:any = import3.inlineInterpolate(1,'',(this.parentView.context.$implicit.config.messageClass || this.parentView.parentView.context.messageClass),'');
    if (import3.checkBinding(throwOnChange,this._expr_2,currVal_2)) {
      this.renderer.setElementProperty(this._el_0,'className',currVal_2);
      this._expr_2 = currVal_2;
    }
    const currVal_3:any = import3.inlineInterpolate(1,'',this.parentView.context.$implicit.message,'');
    if (import3.checkBinding(throwOnChange,this._expr_3,currVal_3)) {
      this.renderer.setText(this._text_1,currVal_3);
      this._expr_3 = currVal_3;
    }
  }
  visitRootNodesInternal(cb:any,ctx:any):void {
    cb(this._el_0,ctx);
  }
}